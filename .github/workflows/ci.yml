name: Python application

on:
  push:
    branches: [ "main", "staging", "xma-corr-poc" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:12
    #     env:
    #       POSTGRES_DB: testdb
    #       POSTGRES_USER: user
    #       POSTGRES_PASSWORD: password
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'poetry'
    - run: poetry install
      # run: |
      #   # python -m pip install --upgrade pip
      #   # pip install flake8 pytest
      #   # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        NINEPANELS_ENV: "CI"
      run: poetry run pytest tests/test_ci.py